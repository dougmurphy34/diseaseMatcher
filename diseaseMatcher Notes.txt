Objective: Develop a citizen science game, based on ESP/Google Image Labeler model, to identify disease names in the text of biomedical research abstracts.

Features: User login/profiles, player vs. AI, time pressure, document storage and display, results storage.

Models: Artigo.org - successor to ESP
        Cyclonecenter.org and others at zooniverse.org

Tools used:     django 1.6.5 web framework (lab standard, personal preference for python over java)
		        MariaDB 10 (more feature rich than mySQL, easier administration than PostgreSQL)
		        Python 2.7
		        jQuery 1.11.1
	            VirtualEnvWrapper (Windows port):
		           https://pypi.python.org/pypi/virtualenvwrapper-win
	            Pycharm Enterprise
	            HeidiSQL
	            MySQL-python 1.2.5
	                binary from http://www.lfd.uci.edu/~gohlke/pythonlibs/
	            GitHub - source control (dougmurphy34/diseaseMatcher)
	            NO data migration - just syncdb
	                (confirmed, South does not and will not support MariaDB http://south.aeracode.org/ticket/1309)

Design Principles used:
    Unit testing (but not true test-driven development)
    MVC model as implemented by django
    Loose coupling
    Agile Development (Frequent functional builds)


Status of development (8/25/2014):
    If user is not logged in, they are walked through a login/registration process.
    Landing page receives user, navigates to single (random) abstract display with input form.
    User can enter text (disease matches) for that abstract until 30 seconds passes, or they click "Done".
    Results are checked for accuracy vs. title and text, offset is calculated, results are stored in the database on submission.
    User is given opportunity to play again or log out.

Next steps:
    Create test for saving a match.
    Record all matches in text via offset (not just first).
    Record time (how long into the game) each disease was entered.

Future direction:
    Build a pretty GUI - branding, images, better instructions to the user, better feedback.
    Create illusion of a "partner" playing with you (AI)
    Replace type-in-the-disease interface with highlight-the-text interface.  (Branch git?)
        Use window.getSelection().  See: http://stackoverflow.com/questions/4652734/return-html-from-a-user-selected-text/4652824#4652824
    User profile module - show user what they have contributed via points, achievements, etc.

Software Design questions:
    Type text vs. highlight vs. both
    Match types - implement?  What distinction is needed?  User input, system calculated?

Product Design questions:
    Visual goals, branding, color schemes and logos.
    User data to be gathered.
    Deployment - where, when.